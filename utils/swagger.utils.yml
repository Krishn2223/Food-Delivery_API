openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Food Delivery API"
  description: "API documentation for food delivery services"
servers:
  - url: "https://food-delivery-api-8tqe.onrender.com/"
tags:
  - name: Items
    description: Operations related to items
  - name: Organizations
    description: Operations related to organizations
  - name: Pricing
    description: Operations related to pricing
  - name: PricingController
    description: Operations related to pricing endpoints
paths:
  /items:
    post:
      tags:
        - Items
      summary: Get pricing by organization and item type.
      requestBody:
        required: true
        description: Enter type of the food item (perishable/non-perishable) and description.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateItem"
      responses:
        200:
          description: created item.
          schema:
            type: integer
            example: 1
  /organizations:
    post:
      tags:
        - Organizations
      summary: Create a new organization
      requestBody:
        required: true
        description: Enter a Organization name other than 'org A'
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrg"
      responses:
        200:
          description: ID of the created organization.
          schema:
            type: integer
            example: 1
  /pricing:
    post:
      tags:
        - Pricing
      summary: Create pricing
      requestBody:
        required: true
        description: Enter information as shown in example.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPrice"
      responses:
        200:
          description: Pricing created successfully.

  /pricing/calculatePrice:
    post:
      tags:
        - PricingController
      summary: Calculate total price
      requestBody:
        required: true
        description: Enter all the details by refering the example.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePricing"
      responses:
        200:
          description: Total price calculated successfully.
          schema:
            type: object
            properties:
              total_price:
                type: number
                example: 50.25
        500:
          description: An error occurred while calculating the total price.
          schema:
            type: object
            properties:
              error:
                type: string
components:
  schemas:
    CreateOrg:
      type: object
      properties:
        name:
          type: string
      example:
        name: org A

    CreateItem:
      type: object
      properties:
        type:
          type: string
        description:
          type: string
      example:
        type: perishable
        description: Apple

    CreatePricing:
      type: object
      properties:
        organization_id:
          type: integer
        item_id:
          type: integer
        zone:
          type: string
        base_distance_in_km:
          type: number
        km_price:
          type: number
        fix_price:
          type: number
      example:
        organization_id: 1
        item_id: 1
        zone: Central
        base_distance_in_km: 5
        km_price: 1.5
        fix_price: 20

    RequestPrice:
      type: object
      properties:
        zone:
          type: string
        organization_id:
          type: integer
        total_distance:
          type: integer
        item_type:
          type: string
      example:
        zone: south
        organization_id: 1
        total_distance: 12
        item_type: perishable
